{"version":3,"file":"static/js/76.ac951c26.chunk.js","mappings":"sKACA,SAAgB,KAAO,mBAAmB,SAAW,uBAAuB,SAAW,uBAAuB,QAAU,sBAAsB,MAAQ,oBAAoB,YAAc,0BAA0B,IAAM,mB,aCEjN,MAAMA,EAAOC,IAAkB,IAAjB,QAAEC,GAASD,EAC5B,MAAOE,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAC1BC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,GAE7CG,EAAM,sCAAAC,OAAyCP,EAAO,qBAAAO,OAD7C,qCAGfC,EAAAA,EAAAA,YAAU,KACoBC,WACtB,IACI,MAAMC,QAAiBC,MAAML,GACvBM,QAAaF,EAASG,OAExBD,EAAKX,KACLC,EAAQU,EAAKX,MAEba,QAAQC,MAAM,sBAAuBH,EAI7C,CAFE,MAAOG,GACLD,QAAQC,MAAM,gCAAiCA,EACnD,GAEJC,EAAmB,GACpB,CAACV,EAAQN,IAMZ,OACIiB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,KAAYC,UACpBC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACIH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,SAAgBC,SAC1BnB,EAAKsB,MAAM,EAAGnB,GAAeoB,KAAKC,IAC/BJ,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAAA,SAAgBC,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,YAAmBC,SAC9BK,EAAWC,cACRT,EAAAA,EAAAA,KAAA,OACIC,UAAWC,EAAAA,MACXQ,IAAG,kCAAApB,OAAoCkB,EAAWC,cAClDE,IAAKH,EAAWI,QAGpBZ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,QAAeC,SAAC,gBAIxCC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAAA,QAAeC,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,KAAAG,SAAA,GAAAb,OAAOkB,EAAWI,SAClBR,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,cAAW,GAAAb,OAAIkB,EAAWK,mBAfAL,EAAWM,QAoBvD9B,EAAK+B,OAAS5B,IACXa,EAAAA,EAAAA,KAAA,UAAQgB,QA9BLC,KACnB7B,GAAiB8B,GAAqBA,EAAoB,GAAE,EA6BXjB,UAAWC,EAAAA,IAAWC,SAAC,kBAGlE,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__m5y0R\",\"castList\":\"Cast_castList__ARoWn\",\"castCard\":\"Cast_castCard__m8Shz\",\"infobox\":\"Cast_infobox__R4BOF\",\"image\":\"Cast_image__mOsuM\",\"placeholder\":\"Cast_placeholder__oyDTA\",\"btn\":\"Cast_btn__Cc2Ok\"};","import React, { useState, useEffect } from \"react\";\nimport styles from './Cast.module.css';\n\nexport const Cast = ({ movieId }) => {\n    const [cast, setCast] = useState([]);\n    const [visibleActors, setVisibleActors] = useState(8);\n    const apiKey = '6ec0ba8fa041ffdfd513a6b00a854a64';\n    const apiUrl = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`;\n\n    useEffect(() => {\n        const fetchMovieCredits = async () => {\n            try {\n                const response = await fetch(apiUrl);\n                const data = await response.json();\n\n                if (data.cast) {\n                    setCast(data.cast);\n                } else {\n                    console.error('No cast data found:', data);\n                }\n            } catch (error) {\n                console.error('Error fetching movie credits:', error);\n            }\n        };\n        fetchMovieCredits();\n    }, [apiUrl, movieId]);\n\n    const loadMoreActors = () => {\n        setVisibleActors(prevVisibleActors => prevVisibleActors + 8);\n    };\n\n    return (\n        <div className={styles.cast}>\n                <>\n                    <ul className={styles.castList}>\n                        {cast.slice(0, visibleActors).map((castMember) => (\n                            <li className={styles.castCard} key={castMember.id}>\n                                <div className={styles.placeholder}>\n                                    {castMember.profile_path ? (\n                                        <img\n                                            className={styles.image}\n                                            src={`https://image.tmdb.org/t/p/w500${castMember.profile_path}`}\n                                            alt={castMember.name}\n                                        />\n                                    ) : (\n                                        <div className={styles.noImage}>No Image</div>\n                                    )}\n                                </div>\n\n                                <div className={styles.infobox}>\n                                    <p>{`${castMember.name}`}</p>\n                                    <p>Character: {`${castMember.character}`}</p>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                    {cast.length > visibleActors && (\n                        <button onClick={loadMoreActors} className={styles.btn}>Load More</button>\n                    )}\n                </>\n        </div>\n    );\n};\n"],"names":["Cast","_ref","movieId","cast","setCast","useState","visibleActors","setVisibleActors","apiUrl","concat","useEffect","async","response","fetch","data","json","console","error","fetchMovieCredits","_jsx","className","styles","children","_jsxs","_Fragment","slice","map","castMember","profile_path","src","alt","name","character","id","length","onClick","loadMoreActors","prevVisibleActors"],"sourceRoot":""}