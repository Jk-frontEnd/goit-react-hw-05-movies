{"version":3,"file":"static/js/881.d5cf6301.chunk.js","mappings":"2KACA,SAAgB,UAAY,0BAA0B,KAAO,qBAAqB,MAAQ,sBAAsB,IAAM,oBAAoB,KAAO,qBAAqB,KAAO,sB,8BCG7K,MAsGA,EAtGeA,KACb,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,KAEnC,MAAMG,EAAeC,eAAeC,QAAQ,UAC5C,OAAOF,EAAeG,KAAKC,MAAMJ,GAAgB,EAAE,KAE9CK,IAAWR,EAAAA,EAAAA,UAAS,qCACpBS,EAASC,IAAcV,EAAAA,EAAAA,WAAS,IAChCW,EAAOC,IAAYZ,EAAAA,EAAAA,UAAS,MAC7Ba,GAAWC,EAAAA,EAAAA,MAEXC,GAAqBC,EAAAA,EAAAA,cAAYC,UACrC,MAAMC,EAAY,mDAAAC,OAAsDC,EAAQ,aAAAD,OAAYX,GAE5F,IACEE,GAAW,GACX,MAAMW,QAAiBC,MAAMJ,GACvBK,QAAaF,EAASE,OAExBF,EAASG,IACXtB,EAAUqB,EAAKE,SACfb,EAAS,MAGTR,eAAesB,QAAQ,SAAUpB,KAAKqB,UAAUJ,EAAKE,YAErDb,EAAS,kCACTV,EAAU,IAQd,CANE,MAAOS,GACPiB,QAAQjB,MAAM,iCAAkCA,GAChDC,EAAS,kCACTV,EAAU,GACZ,CAAC,QACCQ,GAAW,EACb,IACC,CAACF,KAEJqB,EAAAA,EAAAA,YAAU,KAER,MAAM1B,EAAeC,eAAeC,QAAQ,UACzB,IAAIyB,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,SAKxD/B,GACTD,EAAUI,KAAKC,MAAMJ,IAFrBC,eAAe+B,WAAW,SAG5B,GACC,IAoBH,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,UAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,KAAaE,SAhBbvB,UAEnB,GADAwB,EAAEC,iBACyB,KAAvB5C,EAAY6C,OACd,IACEC,aAAalB,QAAQ,cAAe5B,SAE9BiB,EAAmBjB,GACzBe,EAAS,iBAADM,OAAkBrB,GAG5B,CAFE,MAAOa,GACPiB,QAAQjB,MAAM,uBAAwBA,EACxC,CACF,EAKuD4B,SAAA,EACnDM,EAAAA,EAAAA,KAAA,SACER,UAAWC,EAAAA,MACXQ,SAvBcL,IACpB1C,EAAe0C,EAAEM,OAAOC,MAAM,EAuBxBC,KAAK,OACLD,MAAOlD,KAET+C,EAAAA,EAAAA,KAAA,UAAQR,UAAWC,EAAAA,IAAYW,KAAK,SAAQV,SAAC,cAI9C9B,IAAWoC,EAAAA,EAAAA,KAAA,KAAAN,SAAG,eACd5B,IAASyB,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,UAAQ5B,KACpBV,EAAOiD,OAAS,IACfL,EAAAA,EAAAA,KAAA,MAAIR,UAAWC,EAAAA,cAAqBC,SACjCtC,EAAOkD,KAAKC,IACXP,EAAAA,EAAAA,KAAA,MAAIR,UAAWC,EAAAA,KAAYC,SACxBa,EAAMC,iBACLR,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACjB,UAAWC,EAAAA,KAAaiB,GAAE,WAAApC,OAAaiC,EAAMI,IAAKjB,SACrDa,EAAMC,kBAHoBD,EAAMI,UAUzC,C","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MoviesBox\":\"Movies_MoviesBox__jPCE3\",\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"btn\":\"Movies_btn__TlfBQ\",\"link\":\"Movies_link__MzAfU\",\"item\":\"Movies_item__Ba4aJ\"};","import React, { useState, useCallback, useEffect } from 'react';\nimport styles from './Movies.module.css';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState(() => {\n    // Load from sessionStorage when the component mounts\n    const storedMovies = sessionStorage.getItem('movies');\n    return storedMovies ? JSON.parse(storedMovies) : [];\n  });\n  const [api_key] = useState('6ec0ba8fa041ffdfd513a6b00a854a64');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const fetchSearchResults = useCallback(async (newQuery) => {\n    const apiUrlSearch = `https://api.themoviedb.org/3/search/movie?query=${newQuery}&api_key=${api_key}`;\n\n    try {\n      setLoading(true);\n      const response = await fetch(apiUrlSearch);\n      const json = await response.json();\n\n      if (response.ok) {\n        setMovies(json.results);\n        setError(null);\n\n        // Save to sessionStorage after fetching results\n        sessionStorage.setItem('movies', JSON.stringify(json.results));\n      } else {\n        setError('Failed to fetch search results');\n        setMovies([]);\n      }\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n      setError('Failed to fetch search results');\n      setMovies([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [api_key]);\n\n  useEffect(() => {\n    // Load from sessionStorage when the component mounts\n    const storedMovies = sessionStorage.getItem('movies');\n    const queryParam = new URLSearchParams(window.location.search).get('query');\n\n    if (!queryParam) {\n      // Clear sessionStorage if there is no query parameter in the URL\n      sessionStorage.removeItem('movies');\n    } else if (storedMovies) {\n      setMovies(JSON.parse(storedMovies));\n    }\n  }, []);\n\n  const handleChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (searchQuery.trim() !== '') {\n      try {\n        localStorage.setItem('searchQuery', searchQuery);\n\n        await fetchSearchResults(searchQuery);\n        navigate(`/movies?query=${searchQuery}`);\n      } catch (error) {\n        console.error('Error during search:', error);\n      }\n    }\n  };\n\n  return (\n    <div className={styles.MoviesBox}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <input\n          className={styles.input}\n          onChange={handleChange}\n          type=\"text\"\n          value={searchQuery}\n        />\n        <button className={styles.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {loading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {movies.length > 0 && (\n        <ul className={styles.searchResults}>\n          {movies.map((movie) => (\n            <li className={styles.item} key={movie.id}>\n              {movie.original_title && (\n                <Link className={styles.link} to={`/movies/${movie.id}`}>\n                  {movie.original_title}\n                </Link>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["Movies","searchQuery","setSearchQuery","useState","movies","setMovies","storedMovies","sessionStorage","getItem","JSON","parse","api_key","loading","setLoading","error","setError","navigate","useNavigate","fetchSearchResults","useCallback","async","apiUrlSearch","concat","newQuery","response","fetch","json","ok","results","setItem","stringify","console","useEffect","URLSearchParams","window","location","search","get","removeItem","_jsxs","className","styles","children","onSubmit","e","preventDefault","trim","localStorage","_jsx","onChange","target","value","type","length","map","movie","original_title","Link","to","id"],"sourceRoot":""}