{"version":3,"file":"static/js/422.266f03c0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","components/fetch/fetchMovieDetail.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"mainDiv\":\"MovieDetails_mainDiv__mnn5F\",\"poster\":\"MovieDetails_poster__yO7gD\",\"posterPlaceholder\":\"MovieDetails_posterPlaceholder__XKKLE\",\"info\":\"MovieDetails_info__qv2SI\",\"linkBox\":\"MovieDetails_linkBox__W4fcK\",\"link\":\"MovieDetails_link__U+v+7\"};","import React, { useState, useEffect, lazy, Suspense } from 'react';\nimport { useParams, Link, useLocation, Route, Routes, Outlet } from 'react-router-dom';\nimport styles from './MovieDetails.module.css';\nimport { fetchMovieDetails } from '../../components/fetch/fetchMovieDetail';\n\nconst Cast = lazy(() => import('../../components/Cast/Cast'));\nconst Reviews = lazy(() => import('../../components/Reviews/Reviews'));\nconst BackLink = lazy(() => import('../../components/BackLink/BackLink'));\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const data = await fetchMovieDetails(movieId);\n        setMovieDetails(data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchDetails();\n  }, [movieId]);\n\n  const date = movieDetails ? movieDetails.release_date.slice(0, 4) : '';\n\n  return (\n    <div className={styles.container}>\n      <Suspense fallback={<div>Loading...</div>}>\n        <BackLink to={location.state?.from ?? '/'}>\n          Go back\n        </BackLink>\n      </Suspense>\n      {movieDetails && (\n        <div className={styles.mainDiv}>\n          <div className={styles.posterPlaceholder}>\n            {movieDetails.poster_path ? (\n              <img\n                className={styles.poster}\n                src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n                alt={movieDetails.title}\n                height=\"440px\"\n              />\n            ) : (\n              <div className={styles.placeholderText}>No Poster Available</div>\n            )}\n          </div>\n          <div className={styles.info}>\n            <h1>{`${movieDetails.title} (${date})`}</h1>\n            <p>User Score: {movieDetails.vote_average}</p>\n            <h2>Overview</h2>\n            <p>{movieDetails.overview}</p>\n            <h2>Genres</h2>\n            {movieDetails.genres && (\n              <ul>\n                {movieDetails.genres.map((genre) => (\n                  <li key={genre.id}>{genre.name}</li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </div>\n      )}\n      <div className={styles.linkBox}>\n        <Link className={styles.link} to={`/movies/${movieId}/cast`}>\n          Cast\n        </Link>\n        <Link className={styles.link} to={`/movies/${movieId}/reviews`}>\n          Reviews\n        </Link>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          <Route path=\"/\" element={<Outlet />} />\n          <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","const apiKey = '6ec0ba8fa041ffdfd513a6b00a854a64';\nconst apiUrl = 'https://api.themoviedb.org/3';\n\nexport const fetchMovieDetails = async (movieId) => {\n  const url = `${apiUrl}/movie/${movieId}?api_key=${apiKey}`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n"],"names":["Cast","lazy","Reviews","BackLink","MovieDetails","_location$state$from","_location$state","movieDetails","setMovieDetails","useState","movieId","useParams","location","useLocation","useEffect","async","data","url","concat","response","fetch","json","error","console","fetchMovieDetails","fetchDetails","date","release_date","slice","_jsxs","className","styles","children","_jsx","Suspense","fallback","to","state","from","poster_path","src","alt","title","height","vote_average","overview","genres","map","genre","name","id","Link","Routes","Route","path","element","Outlet"],"sourceRoot":""}