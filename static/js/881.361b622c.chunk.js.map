{"version":3,"file":"static/js/881.361b622c.chunk.js","mappings":"2KACA,SAAgB,UAAY,0BAA0B,KAAO,qBAAqB,MAAQ,sBAAsB,IAAM,oBAAoB,KAAO,qBAAqB,KAAO,sB,8BCG7K,MAqFA,EArFeA,KACb,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAeC,IAAaF,EAAAA,EAAAA,UAAS,KACrCG,IAAWH,EAAAA,EAAAA,UAAS,qCACpBI,EAASC,IAAcL,EAAAA,EAAAA,WAAS,IAChCM,EAAOC,IAAYP,EAAAA,EAAAA,UAAS,MAC7BQ,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GAEZ,MAAMI,GAAqBC,EAAAA,EAAAA,cAAYC,UACrC,MAAMC,EAAY,mDAAAC,OAAsDC,EAAQ,aAAAD,OAAYf,GAE5F,IACEE,GAAW,GACX,MAAMe,QAAiBC,MAAMJ,GACvBK,QAAaF,EAASE,OAExBF,EAASG,IACXrB,EAAUoB,EAAKE,SACfjB,EAAS,QAETA,EAAS,kCACTL,EAAU,IAQd,CANE,MAAOI,GACPM,QAAQN,MAAM,iCAAkCA,GAChDC,EAAS,kCACTL,EAAU,GACZ,CAAC,QACCG,GAAW,EACb,IACC,CAACF,IAoBJ,OACEsB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,UAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,KAAaE,SAhBbb,UAEnB,GADAc,EAAEC,iBACyB,KAAvBjC,EAAYkC,OACd,IACEC,aAAaC,QAAQ,cAAepC,SAE9BgB,EAAmBhB,GACzBU,EAAS,iBAADU,OAAkBpB,GAG5B,CAFE,MAAOQ,GACPM,QAAQN,MAAM,uBAAwBA,EACxC,CACF,EAKuDsB,SAAA,EACnDO,EAAAA,EAAAA,KAAA,SACET,UAAWC,EAAAA,MACXS,SAvBcN,IACpB/B,EAAe+B,EAAEO,OAAOC,MAAM,EAuBxBC,KAAK,OACLD,MAAOxC,KAETqC,EAAAA,EAAAA,KAAA,UAAQT,UAAWC,EAAAA,IAAYY,KAAK,SAAQX,SAAC,cAI9CxB,IAAW+B,EAAAA,EAAAA,KAAA,KAAAP,SAAG,eACdtB,IAASmB,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAG,UAAQtB,KACpBL,EAAcuC,OAAS,IACtBL,EAAAA,EAAAA,KAAA,MAAIT,UAAWC,EAAAA,cAAqBC,SACjC3B,EAAcwC,KAAKC,IAClBP,EAAAA,EAAAA,KAAA,MAAIT,UAAWC,EAAAA,KAAYC,SACxBc,EAAaC,iBACZR,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAAClB,UAAWC,EAAAA,KAAakB,GAAE,WAAA3B,OAAawB,EAAaI,IAAKlB,SAC5Dc,EAAaC,kBAHaD,EAAaI,UAUhD,C","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MoviesBox\":\"Movies_MoviesBox__jPCE3\",\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"btn\":\"Movies_btn__TlfBQ\",\"link\":\"Movies_link__MzAfU\",\"item\":\"Movies_item__Ba4aJ\"};","import React, { useState, useCallback } from 'react';\nimport styles from './Movies.module.css';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [fittingMovies, setMovies] = useState([]);\n  const [api_key] = useState('6ec0ba8fa041ffdfd513a6b00a854a64');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  console.log(location);\n\n  const fetchSearchResults = useCallback(async (newQuery) => {\n    const apiUrlSearch = `https://api.themoviedb.org/3/search/movie?query=${newQuery}&api_key=${api_key}`;\n\n    try {\n      setLoading(true);\n      const response = await fetch(apiUrlSearch);\n      const json = await response.json();\n\n      if (response.ok) {\n        setMovies(json.results);\n        setError(null);\n      } else {\n        setError('Failed to fetch search results');\n        setMovies([]);\n      }\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n      setError('Failed to fetch search results');\n      setMovies([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [api_key]);\n\n  const handleChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (searchQuery.trim() !== '') {\n      try {\n        localStorage.setItem('searchQuery', searchQuery);\n\n        await fetchSearchResults(searchQuery);\n        navigate(`/movies?query=${searchQuery}`);\n      } catch (error) {\n        console.error('Error during search:', error);\n      }\n    }\n  };\n\n  return (\n    <div className={styles.MoviesBox}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <input\n          className={styles.input}\n          onChange={handleChange}\n          type=\"text\"\n          value={searchQuery}\n        />\n        <button className={styles.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {loading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      {fittingMovies.length > 0 && (\n        <ul className={styles.searchResults}>\n          {fittingMovies.map((fittingMovie) => (\n            <li className={styles.item} key={fittingMovie.id}>\n              {fittingMovie.original_title && (\n                <Link className={styles.link} to={`/movies/${fittingMovie.id}`}>\n                  {fittingMovie.original_title}\n                </Link>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;"],"names":["Movies","searchQuery","setSearchQuery","useState","fittingMovies","setMovies","api_key","loading","setLoading","error","setError","navigate","useNavigate","location","useLocation","console","log","fetchSearchResults","useCallback","async","apiUrlSearch","concat","newQuery","response","fetch","json","ok","results","_jsxs","className","styles","children","onSubmit","e","preventDefault","trim","localStorage","setItem","_jsx","onChange","target","value","type","length","map","fittingMovie","original_title","Link","to","id"],"sourceRoot":""}